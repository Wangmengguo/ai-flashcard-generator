# Docker Compose file for AI Flashcard Generator
# Note: version field is now obsolete in Docker Compose 2.x

services:
  # Main application service
  flashcard-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: flashcard-generator
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - MAX_TEXT_LENGTH=${MAX_TEXT_LENGTH:-10000}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-60}
      - WORKERS=${WORKERS:-2}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    volumes:
      # Logs are now console-only, no volume needed
      - ./src/config:/app/config:ro
    networks:
      - flashcard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/supported_models"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Development service with hot reload
  flashcard-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: flashcard-generator-dev
    ports:
      - "${DEV_PORT:-8001}:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - CORS_ORIGINS=*
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    volumes:
      - .:/app
      # Logs are console-only in development too
    networks:
      - flashcard-network
    command: ["uvicorn", "src.main_refactored:app", "--reload", "--host", "0.0.0.0", "--port", "8000", "--log-level", "debug"]
    profiles:
      - dev

  # Reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: flashcard-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - flashcard-network
    depends_on:
      - flashcard-app
    restart: unless-stopped
    profiles:
      - production

  # Monitoring and logging (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: flashcard-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - flashcard-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: flashcard-grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - flashcard-network
    profiles:
      - monitoring

networks:
  flashcard-network:
    driver: bridge
    name: flashcard-network

volumes:
  grafana-data:
    driver: local